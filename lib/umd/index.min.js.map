{"version":3,"sources":["webpack://BLib/webpack/universalModuleDefinition","webpack://BLib/webpack/bootstrap","webpack://BLib/external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"React\",\"root\":\"React\"}","webpack://BLib/./node_modules/classnames/index.js","webpack://BLib/external {\"commonjs\":\"recharts\",\"commonjs2\":\"recharts\",\"amd\":\"Recharts\",\"root\":\"Recharts\"}","webpack://BLib/./src/ChartLegendContent.tsx","webpack://BLib/./src/index.ts","webpack://BLib/./src/Chart.tsx"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__2__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","classNames","classes","arguments","length","arg","argType","push","Array","isArray","inner","apply","join","default","undefined","React","classnames_1","recharts_1","ICON_SIZE","ChartLegendContent","Component","[object Object]","props","super","this","handleLegendItemClick","serie","setState","offSeries","assign","state","onItemClick","align","iconSize","createElement","className","style","textAlign","series","map","index","label","color","inactive","itemStyles","margin","left","right","center","cursor","display","alignItems","itemInactive","onClick","Surface","width","height","viewBox","x","y","marginRight","renderIcon","halfSize","sixthSize","thirdSize","legendIconType","Symbols","fill","strokeWidth","stroke","cx","cy","size","sizeType","type","__export","ChartLegendContent_1","Chart","onLegendClick","options","onLegentItemClick","dataKey","loadingDataSource","data","dataSource","promise","then","result","catch","error","onDataSourceError","ResponsiveContainer","ComposedChart","XAxis","xKey","xHeight","YAxis","yWidth","CartesianGrid","vertical","strokeDasharray","Tooltip","Legend","legendHeight","iconType","legendItemIconType","content","legendItemInactive","Area","visualizationType","Bar","barSize","Line","loadingElement","loadingBox"],"mappings":"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","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"recharts\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"BLib\", [\"React\", \"Recharts\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"BLib\"] = factory(require(\"react\"), require(\"recharts\"));\n\telse\n\t\troot[\"BLib\"] = factory(root[\"React\"], root[\"Recharts\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","import * as React from \"react\";\nimport classNames from \"classnames\";\nimport { LegendProps, Surface, Symbols } from \"recharts\";\n\nimport { ISerie } from \"../typings/serie\";\n\nconst ICON_SIZE = 32;\n\nexport interface IChartLegendContentProps extends LegendProps {\n  classes?: { itemInactive: string };\n  series: ISerie[];\n  onItemClick?: (serie: ISerie) => void;\n}\n\nexport class ChartLegendContent extends React.Component<\n  IChartLegendContentProps,\n  {\n    offSeries: any;\n  }\n> {\n  constructor(props: IChartLegendContentProps) {\n    super(props);\n    this.state = {\n      offSeries: {}\n    };\n  }\n\n  public render() {\n    const { classes, align, iconSize } = this.props;\n    return (\n      <div\n        className=\"customized-legend\"\n        style={{\n          textAlign: align\n        }}\n      >\n        {this.props.series &&\n          this.props.series.map((serie, index) => {\n            const { key, label, color } = serie;\n            const inactive = !!this.state.offSeries[key];\n            const margin = {\n              left: `0 16px 0 0`,\n              right: `0 0 0 16px`,\n              center: `0 8px 0 8px`\n            };\n            const itemStyles = {\n              margin: margin[align || \"center\"],\n              cursor: \"pointer\",\n              display: \"inline-flex\",\n              alignItems: \"center\"\n            };\n\n            return (\n              <span\n                key={`legend-item-${index}`}\n                className={classNames(\n                  \"recharts-legend-item\",\n                  inactive && classes && classes.itemInactive\n                )}\n                onClick={() => this.handleLegendItemClick(serie)}\n                style={itemStyles}\n              >\n                <Surface\n                  width={iconSize}\n                  height={iconSize}\n                  viewBox={{\n                    x: 0,\n                    y: 0,\n                    width: ICON_SIZE,\n                    height: ICON_SIZE\n                  }}\n                  style={{\n                    marginRight: 4\n                  }}\n                >\n                  {this.renderIcon(serie, inactive)}\n                </Surface>\n                <span>{label || key}</span>\n              </span>\n            );\n          })}\n      </div>\n    );\n  }\n  private handleLegendItemClick = (serie: ISerie) => {\n    this.setState({\n      offSeries: {\n        ...this.state.offSeries,\n        [serie.key]: !this.state.offSeries[serie.key]\n      }\n    });\n    if (this.props.onItemClick) {\n      this.props.onItemClick(serie);\n    }\n  };\n  private renderIcon(serie: ISerie, inactive: boolean = false) {\n    const halfSize = ICON_SIZE / 2;\n    const sixthSize = ICON_SIZE / 6;\n    const thirdSize = ICON_SIZE / 3;\n    const color = serie.color;\n    if (!serie.legendIconType) {\n      if (serie.type === \"line\") {\n        // show line as the legend icon\n        return inactive ? (\n          <path\n            strokeWidth={4}\n            fill=\"none\"\n            stroke={\"#9e9e9e\"}\n            d={`M0,${halfSize}h${thirdSize}\n                                A${sixthSize},${sixthSize},0,1,1,${2 *\n              thirdSize},${halfSize}\n                                H${ICON_SIZE}M${2 * thirdSize},${halfSize}\n                                A${sixthSize},${sixthSize},0,1,1,${thirdSize},${halfSize}`}\n            className=\"recharts-legend-icon\"\n          />\n        ) : (\n          <path\n            strokeWidth={4}\n            fill=\"none\"\n            stroke={color}\n            d={`M0,${halfSize}h${thirdSize}\n                                A${sixthSize},${sixthSize},0,1,1,${2 *\n              thirdSize},${halfSize}\n                                H${ICON_SIZE}M${2 * thirdSize},${halfSize}\n                                A${sixthSize},${sixthSize},0,1,1,${thirdSize},${halfSize}`}\n            className=\"recharts-legend-icon\"\n          />\n        );\n      } else {\n        // for area, bar show rect legend\n        return inactive ? (\n          <path\n            strokeWidth={4}\n            stroke={color}\n            fill=\"none\"\n            d={`M0,${sixthSize}h${ICON_SIZE}v${halfSize}h${-ICON_SIZE}z`}\n            className=\"recharts-legend-icon\"\n          />\n        ) : (\n          <path\n            stroke=\"none\"\n            fill={color}\n            d={`M0,${sixthSize}h${ICON_SIZE}v${halfSize}h${-ICON_SIZE}z`}\n            className=\"recharts-legend-icon\"\n          />\n        );\n      }\n    }\n    return inactive ? (\n      <Symbols\n        fill=\"none\"\n        strokeWidth={4}\n        stroke={color}\n        cx={halfSize}\n        cy={halfSize}\n        size={ICON_SIZE - 10}\n        sizeType=\"diameter\"\n        type={serie.legendIconType || \"circle\"}\n      />\n    ) : (\n      <Symbols\n        fill={color}\n        cx={halfSize}\n        cy={halfSize}\n        size={ICON_SIZE - 10}\n        sizeType=\"diameter\"\n        type={serie.legendIconType || \"circle\"}\n      />\n    );\n  }\n}\n","export { ISerie } from \"../typings/serie\";\nexport * from \"./Chart\";\nexport * from \"./ChartLegendContent\";\n","import * as React from \"react\";\nimport classNames from \"classnames\";\nimport {\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Line,\n  ComposedChart,\n  Bar,\n  Area,\n  IconType\n} from \"recharts\";\nimport { ISerie } from \"../typings/serie\";\nimport { ChartLegendContent } from \"./ChartLegendContent\";\n\nexport interface IChartProps {\n  classes?: any;\n  className?: string;\n  data: any[];\n  xKey: string;\n  series: ISerie[];\n  width?: number | string;\n  height?: number | string;\n  xHeight?: number;\n  yWidth?: number;\n  legendHeight?: number;\n  legendItemIconType?: IconType;\n  loadingElement?: React.ReactNode | React.ReactNode[];\n  dataSource?: Promise<any[]> | (() => Promise<any[]>);\n  onDataSourceError?: (error: any) => void;\n  onLegendClick?: (options: any) => void;\n}\n\nexport interface IChartState {\n  loadingDataSource: boolean;\n  data: any[];\n  offSeries: any;\n}\n\nexport class Chart extends React.Component<IChartProps, IChartState> {\n  constructor(props: IChartProps) {\n    super(props);\n    this.state = {\n      loadingDataSource: false,\n      data: this.props.data,\n      offSeries: {}\n    };\n  }\n  public componentDidMount() {\n    if (this.props.dataSource) {\n      const promise =\n        typeof this.props.dataSource === \"object\"\n          ? this.props.dataSource\n          : this.props.dataSource();\n      this.setState({\n        loadingDataSource: true\n      });\n      promise\n        .then(result => {\n          this.setState({\n            data: result,\n            loadingDataSource: false\n          });\n        })\n        .catch(error => {\n          this.setState({\n            loadingDataSource: false\n          });\n          if (this.props.onDataSourceError) {\n            this.props.onDataSourceError(error);\n          }\n        });\n    }\n  }\n  public componentWillReceiveProps(props: IChartProps) {\n    if (!this.props.dataSource) {\n      this.setState({\n        data: props.data\n      });\n    }\n  }\n  public render() {\n    const { classes } = this.props;\n    const height = this.props.height || 320;\n    return (\n      <div\n        className={classNames(classes && classes.root, this.props.className)}\n        style={{ width: this.props.width, height }}\n      >\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <ComposedChart data={this.state.data}>\n            <XAxis dataKey={this.props.xKey} height={this.props.xHeight} />\n            <YAxis\n              width={\n                this.state.data && this.state.data.length > 0\n                  ? this.props.yWidth\n                  : 0\n              }\n            />\n            <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\n            {this.props.data && this.props.data.length > 0 && <Tooltip />}\n            <Legend\n              height={this.props.legendHeight || 45}\n              iconType={this.props.legendItemIconType || \"square\"}\n              onClick={this.onLegendClick}\n              content={props => (\n                <ChartLegendContent\n                  {...props}\n                  series={this.props.series}\n                  onItemClick={this.onLegentItemClick}\n                  classes={{\n                    itemInactive: classes && classes.legendItemInactive\n                  }}\n                />\n              )}\n            />\n            {this.props.series &&\n              this.props.series.map((serie, index) => {\n                if (this.state.offSeries[serie.key]) {\n                  return;\n                }\n                switch (serie.type) {\n                  case \"area\":\n                    return (\n                      <Area\n                        key={index}\n                        type={serie.visualizationType || \"monotone\"}\n                        dataKey={serie.key}\n                        fill={serie.color}\n                        stroke={serie.color}\n                      />\n                    );\n                  case \"bar\":\n                    return (\n                      <Bar\n                        key={index}\n                        dataKey={serie.key}\n                        barSize={serie.width || 20}\n                        fill={serie.color}\n                      />\n                    );\n                  case \"line\":\n                  default:\n                    return (\n                      <Line\n                        key={index}\n                        type={serie.visualizationType || \"monotone\"}\n                        dataKey={serie.key}\n                        stroke={serie.color}\n                      />\n                    );\n                }\n              })}\n          </ComposedChart>\n        </ResponsiveContainer>\n        {this.state.loadingDataSource && this.props.loadingElement && (\n          <div className={classes.loadingBox} style={{ height, width: \"100%\" }}>\n            {this.props.loadingElement}\n          </div>\n        )}\n      </div>\n    );\n  }\n  private onLegendClick = (options: any) => {\n    if (this.props.onLegendClick) {\n      this.props.onLegendClick(options);\n    }\n  };\n  private onLegentItemClick = (serie: ISerie) => {\n    const dataKey = serie.key;\n    this.setState({\n      offSeries: {\n        ...this.state.offSeries,\n        [dataKey]: !this.state.offSeries[dataKey]\n      }\n    });\n  };\n}\n"],"sourceRoot":""}